version: '2'
services:
  kafka-rest:
    image: confluentinc/cp-kafka-rest:3.1.1
    depends_on:
      - kafka
    ports:
      - "${SERVICE_ELK_KAFKA_REST_PORT}:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper:${SERVICE_ELK_ZOOKEEPER_PORT}"
      KAFKA_REST_HOST_NAME: "kafka-rest"
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:3.1.1
    ports:
      - "${SERVICE_ELK_ZOOKEEPER_PORT}:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "${SERVICE_ELK_ZOOKEEPER_PORT}"
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:3.1.1
    depends_on:
      - zookeeper
    ports:
      - "${SERVICE_ELK_KAFKA_PORT}:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:${SERVICE_ELK_ZOOKEEPER_PORT}"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:2
    ports:
      - "${SERVICE_ELK_ELASTICSEARCH_PORT}:9200"
      - "${SERVICE_ELK_ELASTICSEARCH_PORT_TRANSPORT}:9300"
    volumes:
      - /usr/share/elasticsearch/data
    restart: unless-stopped
    command: elasticsearch -Des.network.host=0.0.0.0 -Des.script.engine.groovy.inline.aggs=on

  logstash:
    image: logstash:2
    volumes:
      - ./config/logstash/logstash.conf:/etc/logstash/conf.d/logstash.conf
    ports:
      - "${SERVICE_ELK_LOGSTASH_PORT}:5000"
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    restart: unless-stopped
    command: logstash -f /etc/logstash/conf.d/logstash.conf

  kibana:
    build: ./config/kibana
    volumes:
      - ./config/kibana/kibana.yml:/opt/kibana/config/kibana.yml
    ports:
      - "${SERVICE_ELK_KIBANA_PORT}:5601"
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    restart: unless-stopped
